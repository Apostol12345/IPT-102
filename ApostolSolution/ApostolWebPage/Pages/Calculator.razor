@page "/calculator"
@* <h3>Calculator</h3>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple Calculator</title>
   
</head>
<body>
    <div class="calculator">
        <input type="text" id="display" disabled>
        <div class="buttons">
            <button onclick="clearDisplay()">C</button>
            <button onclick="appendToDisplay('/')">/</button>
            <button onclick="appendToDisplay('*')">*</button>
            <button onclick="appendToDisplay('-')">-</button>
            <button onclick="appendToDisplay('7')">7</button>
            <button onclick="appendToDisplay('8')">8</button>
            <button onclick="appendToDisplay('9')">9</button>
            <button onclick="appendToDisplay('+')">+</button>
            <button onclick="appendToDisplay('4')">4</button>
            <button onclick="appendToDisplay('5')">5</button>
            <button onclick="appendToDisplay('6')">6</button>
            <button onclick="calculateResult()" id="equals">=</button>
            <button onclick="appendToDisplay('1')">1</button>
            <button onclick="appendToDisplay('2')">2</button>
            <button onclick="appendToDisplay('3')">3</button>
            <button onclick="appendToDisplay('0')" id="zero">0</button>
            <button onclick="appendToDisplay('.')">.</button>
        </div>
    </div>

    <script>
        // Inline JavaScript for demonstration purposes

        function appendToDisplay(value) {
            const display = document.getElementById('display');
            display.value += value;
        }

        function clearDisplay() {
            document.getElementById('display').value = '';
        }

        function calculateResult() {
            const display = document.getElementById('display');
            try {
                // Use the Function constructor for safe evaluation
                display.value = new Function('return ' + display.value)();
            } catch (e) {
                display.value = 'Error';
            }
        }
    </script>
</body>
</html> *@

v
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CRUD Login Form</title>
    <style>
        /* body {
            font-family: Arial, sans-serif;
        }

        .form-group {
            margin-bottom: 10px;
        }

        .form-control {
            padding: 8px;
            width: 200px;
        }

        .button {
            padding: 8px 15px;
            cursor: pointer;
        } */
    </style>
</head>
<body>

    <h1>User Management</h1>

    <h2>Create or Update User</h2>
    <div>
        <div class="form-group">
            <input type="text" id="username" class="form-control" placeholder="Username" required>
        </div>
        <div class="form-group">
            <input type="password" id="password" class="form-control" placeholder="Password" required>
        </div>
        <button class="button" onclick="createUser()">Create User</button>
    </div>

    <h2>Existing Users</h2>
    <ul id="userList"></ul>

    <script>
        class UserManager {
            constructor() {
                this.users = [];
            }

            createUser(username, password) {
                const user = { username, password };
                this.users.push(user);
                this.renderUsers();
                alert('User created!');
            }

            readUsers() {
                return this.users;
            }

            updateUser(index, newUsername, newPassword) {
                this.users[index] = { username: newUsername, password: newPassword };
                this.renderUsers();
                alert('User updated!');
            }

            deleteUser(index) {
                this.users.splice(index, 1);
                this.renderUsers();
                alert('User deleted!');
            }

            renderUsers() {
                const userList = document.getElementById('userList');
                userList.innerHTML = '';
                this.users.forEach((user, index) => {
                    const li = document.createElement('li');
                    li.textContent = `${user.username} `;
                    const updateButton = document.createElement('button');
                    updateButton.textContent = 'Update';
                    updateButton.onclick = () => this.updateUserPrompt(index);
                    const deleteButton = document.createElement('button');
                    deleteButton.textContent = 'Delete';
                    deleteButton.onclick = () => this.deleteUser(index);
                    li.appendChild(updateButton);
                    li.appendChild(deleteButton);
                    userList.appendChild(li);
                });
            }

            updateUserPrompt(index) {
                const newUsername = prompt('Enter new username:', this.users[index].username);
                const newPassword = prompt('Enter new password:', this.users[index].password);
                if (newUsername && newPassword) {
                    this.updateUser(index, newUsername, newPassword);
                }
            }
        }

        const userManager = new UserManager();

        function createUser() {
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            if (username && password) {
                userManager.createUser(username, password);
                document.getElementById('username').value = '';
                document.getElementById('password').value = '';
            } else {
                alert('Please fill in all fields.');
            }
        }
    </script>

</body>
</html>

